{
	"info": {
		"_postman_id": "001a5c61-945f-44da-8621-2d2e5f559bc5",
		"name": "Airlines API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2089106",
		"_collection_link": "https://restless-comet-5623.postman.co/workspace/a252730f-5236-4465-bf8b-3fdea45bfefc/collection/2089106-001a5c61-945f-44da-8621-2d2e5f559bc5?action=share&source=collection_link&creator=2089106"
	},
	"item": [
		{
			"name": "airlines",
			"item": [
				{
					"name": "Crear una aerolínea válida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.collectionVariables.set(\"airlineId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Avianca\",\n  \"descripcion\": \"Descripción Aerolínea Avianca\",\n  \"fechaFundacion\": \"1960-01-01\",\n  \"paginaWeb\": \"https://wwww.avianca.com.co\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear una aerolinea inválida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"   pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Aeropuerto Internacional Bololó\",\n  \"descripcion\": \"Descripción Aeropuerto Bololó\",\n  \"fechaFundacion\": \"Alguna fecha\",\n  \"paginaWeb\": \"Alguna página Web\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todas las aerolíneas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of museums > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aerolinea not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{invalidAirlineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{invalidAirlineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Avianca\",\n  \"descripcion\": \"La peor aerolínea de LatAm\",\n  \"fechaFundacion\": \"1960-01-01\",\n  \"paginaWeb\": \"https://wwww.avianca.com.co\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aerolinea not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Aeropuerto Internacional ElDorado\",\n  \"descripcion\": \"El aeropuerto más moderno de Latam.\",\n  \"fechaFundacion\": \"1960-01-01\",\n  \"paginaWeb\": \"https://wwww.eldorado.gov.co\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{invalidAirlineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{invalidAirlineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar una aerolínea inválida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aerolinea not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{invalidAirlineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{invalidAirlineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "airports",
			"item": [
				{
					"name": "Crear un aeropuerto válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.collectionVariables.set(\"airportId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Aeropuerto Internacional ElDorado\",\n  \"codigo\": \"ELD\",\n  \"pais\": \"Colombia\",\n  \"ciudad\": \"Bogota\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un aeropuerto inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"   pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Aeropuerto Internacional Bololó\",\n  \"codigo\": \"ELD\",\n  \"pais\": 57,\n  \"ciudad\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todos los aeropuertos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of museums > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un aeropuerto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{airportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{airportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una aerolínea que no existe Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aeropuerto not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{invalidAirportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{invalidAirportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un aeropuerto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Aeropuerto Internacional ElDorado\",\n  \"codigo\": \"ELD\",\n  \"pais\": \"COLOMBIA\",\n  \"ciudad\": \"Bogota\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports/{{airportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{airportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un aeropuerto que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aeropuerto not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Aeropuerto Internacional ElDorado\",\n  \"descripcion\": \"El aeropuerto más moderno de Latam.\",\n  \"fechaFundacion\": \"1960-01-01\",\n  \"paginaWeb\": \"https://wwww.eldorado.gov.co\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports/{{invalidAirlineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{invalidAirlineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar una aerolínea inválida Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aeropuerto not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{invalidAirlineId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{invalidAirlineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar una aerolínea Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{airportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{airportId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "airlines-airports",
			"item": [
				{
					"name": "Asociar aeropuerto a aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}/airports/{{airportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}",
								"airports",
								"{{airportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar un aeropuerto que no existe a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aeropuerto no encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}/airports/{{invalidAirportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}",
								"airports",
								"{{invalidAirportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener los aeropuertos asociados a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of airports > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}",
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un aeropuerto asociado a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}/airports/{{airportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}",
								"airports",
								"{{airportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una aerolínea que no existe Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aeropuerto no encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}/airports/{{invalidAirportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}",
								"airports",
								"{{invalidAirportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los aeropuertos asociados a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": \"{{airportId}}\",\n    \"nombre\": \"Aeropuerto Internacional ElDorado\",\n    \"codigo\": \"ELC\",\n    \"pais\": \"COLOMBIA\",\n    \"ciudad\": \"BOGOTA\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}",
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un aeropuerto que no existe en una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aeropuerto no encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": \"{{invalidAirportId}}\",\n    \"nombre\": \"Aeropuerto Internacional ElDorado\",\n    \"codigo\": \"ELC\",\n    \"pais\": \"COLOMBIA\",\n    \"ciudad\": \"BOGOTA\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}",
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un aeropuerto que no está asociado a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"Aeropuerto no encontrado\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airportId}}/airports/{{invalidAirportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airportId}}",
								"airports",
								"{{invalidAirportId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un aeropuerto asociado a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airlineId}}/airports/{{airportId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airlineId}}",
								"airports",
								"{{airportId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "airlineId",
			"value": "",
			"type": "string"
		},
		{
			"key": "airportId",
			"value": "",
			"type": "string"
		},
		{
			"key": "invalidAirlineId",
			"value": "a99e9c86-cbd0-4ea9-bf63-68769f7c0525",
			"type": "string"
		},
		{
			"key": "invalidAirportId",
			"value": "a16e6ca2-baa5-4c63-a8b4-9c7117f391b5",
			"type": "string"
		}
	]
}